     1                                  bits 32 
     2                                  global start
     3                                  
     4                                  
     5                                  extern exit 
     6                                  import exit msvcrt.dll  
     7                                  
     8                                  segment data use32 class=data
     9 00000000 614162423225784D            s db 'a', 'A', 'b', 'B', '2', '%', 'x', 'M'
    10                                      l equ $-s
    11 00000008 00<rept>                    d times l db 0 
    12                                  
    13                                  segment code use32 class=code
    14                                  start: ; A character string S is given. Obtain the string D that contains all capital letters of the string S.
    15                                      
    16 00000000 BE00000000                  mov esi, 0                   ; esi=0
    17 00000005 BF00000000              	mov edi, 0                   ; edi=0    
    18                                  	Repeta:
    19 0000000A 8A86[00000000]                  mov al, [s+esi]          ; al gets the value of each element of the string
    20 00000010 3C5A                            cmp al, 'Z'              ; compare al to Z
    21 00000012 770B                            ja not_capital           ; if al is grater than Z jumps to label
    22 00000014 3C41                            cmp al, 'A'              ; compare al to A
    23 00000016 7207                            jb not_capital           ; if al is less than A jumps to label
    24 00000018 8887[08000000]                  mov [d+edi], al          ; moves al to the result on the corresponding position
    25 0000001E 47                              inc edi                  ; increment edi by 1
    26                                          not_capital:
    27 0000001F 46                              inc esi                  ; increment esi by 1
    28 00000020 83FE08                          cmp esi, l               ; compare esi to l
    29 00000023 72E5                            jb Repeta                ; if esi is less than l repeats the loop
    30                                  
    31                                  
    32                                      
    33 00000025 6A00                        push dword 0 
    34 00000027 FF15[00000000]              call [exit] 
