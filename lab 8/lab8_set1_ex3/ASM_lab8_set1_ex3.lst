     1                                  bits 32 
     2                                  global start
     3                                   
     4                                  ; declararea functiilor externe folosite de program
     5                                  extern exit, printf, scanf  ; adaugam printf si scanf ca functii externe           
     6                                  import exit msvcrt.dll    
     7                                  import printf msvcrt.dll     ; indicam asamblorului ca functia printf se gaseste in libraria msvcrt.dll
     8                                  import scanf msvcrt.dll      ; similar pentru scanf
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12 00000000 0F000000                    a dd 15
    13 00000004 00000000                    b dd 0
    14 00000008 256400                      format db "%d",0
    15 0000000B 612B612F623D256400          message db "a+a/b=%d",0
    16                                  
    17                                  
    18                                  segment code use32 class=code
    19                                  start:  
    20                                      ;A natural number a (a: dword, defined in the data segment) is given. 
    21                                      ;Read a natural number b from the keyboard and calculate: a + a/b. 
    22                                      ;Display the result of this operation. The values will be displayed in decimal format (base 10) with sign.
    23                                     
    24 00000000 68[04000000]                push dword b                ; push the value where I put the read number
    25 00000005 68[08000000]                push dword format           ; push its format
    26 0000000A FF15[00000000]              call [scanf]                ; read the number from keyboard
    27 00000010 83C408                      add ESP, 4*2                ;clear the stack
    28                                      
    29 00000013 A1[00000000]                mov EAX, [a]                ; put the value of a in eax
    30 00000018 99                          cdq                         ; make eax quadraword
    31 00000019 F73D[04000000]              idiv dword[b]               ; divide eax quadra to value of b, and becomes again dword
    32 0000001F 89C7                        mov EDI, EAX                ; edi=eax
    33 00000021 033D[00000000]              add EDI, [a]                ; edi=eax+a
    34                                      
    35 00000027 57                          push dword EDI              ; push the value to be printed
    36 00000028 68[0B000000]                push dword message          ; push its format
    37 0000002D FF15[00000000]              call [printf]               ; print the message and the value of the expression
    38 00000033 83C408                      add ESP, 4*2                ; clear the stack
    39                                  
    40                                  
    41 00000036 6A00                        push dword 0 
    42 00000038 FF15[00000000]              call [exit] 
