     1                                  bits 32 
     2                                  global start
     3                                  
     4                                  
     5                                  ; declararea functiilor externe folosite de program
     6                                  extern exit, printf, scanf  ; adaugam printf si scanf ca functii externe           
     7                                  import exit msvcrt.dll    
     8                                  import printf msvcrt.dll     ; indicam asamblorului ca functia printf se gaseste in libraria msvcrt.dll
     9                                  import scanf msvcrt.dll      ; similar pentru scanf      
    10                                  
    11                                  segment data use32 class=data
    12 00000000 0A000000                   a dd 10
    13 00000004 00000000                   b dd 0
    14 00000008 256400                     message db "%d",0
    15 0000000B 00000000                   result dd 0
    16                                  
    17                                  segment code use32 class=code
    18                                  start:
    19                                      ;A natural number a (a: dword, defined in the data segment) is given. Read a    ;natural number b from the keyboard and calculate: a + a/b. Display the result of
    20                                      ;this operation. The values will be displayed in decimal format (base 10) with ;sign.
    21                                      
    22                                      
    23                                      
    24 00000000 68[04000000]                push dword b      ;read b from keyboard
    25 00000005 68[08000000]                push dword message
    26 0000000A FF15[00000000]              call [scanf]
    27 00000010 83C408                      add esp, 4*2
    28                                      
    29 00000013 BA00000000                  mov edx,0
    30 00000018 A1[00000000]                mov eax ,[a]        ;eax= a
    31 0000001D F735[04000000]              div dword [b]       ;edx:eax = a/b
    32                                      
    33 00000023 1305[00000000]              adc eax, [a]        ;eax= a + a/b
    34                                      
    35 00000029 A3[0B000000]                mov [result], eax
    36                                      
    37                                      
    38 0000002E FF35[0B000000]              push dword [result]
    39 00000034 68[08000000]                push dword message
    40 00000039 FF15[00000000]              call [printf]
    41 0000003F 83C408                      add esp,4*2         ;print result
    42                                      
    43                                      
    44 00000042 6A00                        push dword 0 
    45 00000044 FF15[00000000]              call [exit]
    46                                      
